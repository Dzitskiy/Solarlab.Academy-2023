<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Board.Host.Api</name>
    </assembly>
    <members>
        <member name="T:Board.Host.Api.Controllers.AccountController">
            <summary>
            Контроллер для работы с аккаунтами.
            </summary>
            <response code="500">Произошла внутренняя ошибка.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.AccountController.#ctor(Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.AccountController})">
            <summary>
            Инициализирует экземпляр <see cref="T:Board.Host.Api.Controllers.AccountController"/>
            </summary>
            <param name="logger">Сервис логирования.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.AccountController.RegisterAccount(Board.Contracts.Account.CreateAccountDto,System.Threading.CancellationToken)">
            <summary>
            Зарегистрировать новый аккаунт.
            </summary>
            <param name="dto">Модель регистрации аккаунта.</param>
            <param name="cancellation">Токен отмены.</param>
            <response code="201">Аккаунт успешно зарегистрирован.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель зарегистрированного аккаунта.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.AccountController.Login(Board.Contracts.Account.LoginAccountDto,System.Threading.CancellationToken)">
            <summary>
            Войти в аккаунт.
            </summary>
            <param name="dto">Модель входа в аккаунт.</param>
            <param name="cancellation">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель с данными входа.</returns>
        </member>
        <member name="T:Board.Host.Api.Controllers.CategoryController">
            <summary>
            Контроллер для работы с категориями.
            </summary>
            <response code="500">Произошла внутренняя ошибка.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.#ctor(Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.CategoryController})">
            <summary>
            Инициализирует экземпляр <see cref="T:Board.Host.Api.Controllers.CategoryController"/>
            </summary>
            <param name="logger">Сервис логирования.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Получить список категорий.
            </summary>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно</response>
            <returns>Список моделей категорий.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить категорию по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="404">Категория с указанным идентификатором не найдена.</response>
            <returns>Модель категории.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.CreateCategory(Board.Contracts.Category.CreateCategoryDto,System.Threading.CancellationToken)">
            <summary>
            Создать новую категорию.
            </summary>
            <param name="dto">Модель создания категории.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="201">Категория успешно создана.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель созданной категории.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.UpdateCategory(System.Guid,Board.Contracts.Category.UpdateCategoryDto,System.Threading.CancellationToken)">
            <summary>
            Обновить категорию.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="dto">Модель обновления категории.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель обновлённой категории.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.PatchCategory(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Board.Contracts.Category.UpdateCategoryDto},System.Threading.CancellationToken)">
            <summary>
            Частично обновить категорию.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="dto">Модель обновления категории.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель обновлённой категории.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.CategoryController.DeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить категорию по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="204">Запрос выполнен успешно.</response>
        </member>
        <member name="T:Board.Host.Api.Controllers.PostController">
            <summary>
            Контроллер для работы с объявлениями.
            </summary>
            <response code="500">Произошла внутренняя ошибка.</response>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostController.#ctor(Microsoft.Extensions.Logging.ILogger{Board.Host.Api.Controllers.PostController},Board.Application.AppData.Contexts.Posts.Services.IPostService)">
            <summary>
            Инициализирует экземпляр <see cref="T:Board.Host.Api.Controllers.PostController"/>
            </summary>
            <param name="logger">Сервис логирования.</param>
            <param name="postService">Сервис для работы с объявлениями.</param>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostController.GetAll(System.Threading.CancellationToken)">
            <summary>
            Получить список объявлений.
            </summary>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно</response>
            <returns>Список моделей объявлений.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostController.GetById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получить объявление по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="404">Объявление с указанным идентификатором не найдено.</response>
            <returns>Модель объявления.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostController.CreatePost(Board.Contracts.Posts.CreatePostDto,System.Threading.CancellationToken)">
            <summary>
            Создать новое объявление.
            </summary>
            <param name="dto">Модель создания объявления.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="201">Объявление успешно создано.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель созданного объявления.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostController.UpdatePost(System.Guid,Board.Contracts.Posts.UpdatePostDto,System.Threading.CancellationToken)">
            <summary>
            Обновить объявление.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="dto">Модель обновления объявления.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель обновлённого объявления.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostController.PatchPost(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Board.Contracts.Posts.UpdatePostDto},System.Threading.CancellationToken)">
            <summary>
            Частично обновить объявление.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="dto">Модель обновления объявления.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="200">Запрос выполнен успешно.</response>
            <response code="400">Модель данных запроса невалидна.</response>
            <response code="422">Произошёл конфликт бизнес-логики.</response>
            <returns>Модель обновлённого объявления.</returns>
        </member>
        <member name="M:Board.Host.Api.Controllers.PostController.DeleteById(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Удалить объявление по идентификатору.
            </summary>
            <param name="id">Идентификатор.</param>
            <param name="cancellationToken">Токен отмены.</param>
            <response code="204">Запрос выполнен успешно.</response>
        </member>
    </members>
</doc>
